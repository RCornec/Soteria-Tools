<?xml version="1.0"?>
<doc>
<assembly>
<name>
DAL
</name>
</assembly>
<members>
<member name="P:DAL.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:DAL.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:DAL.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:DAL.Creds.CreateHash(System.String)">
	<summary>
 Creates a salted PBKDF2 hash of the password.
 </summary>
	<param name="password">The password to hash.</param>
	<returns>The hash of the password.</returns>
</member><member name="M:DAL.Creds.ValidatePassword(System.String,System.String)">
	<summary>
 Validates a password given a hash of the correct one.
 </summary>
	<param name="password">The password to check.</param>
	<param name="correctHash">A hash of the correct password.</param>
	<returns>True if the password is correct. False otherwise.</returns>
</member><member name="M:DAL.Creds.SlowEquals(System.Byte[],System.Byte[])">
	<summary>
 Compares two byte arrays in length-constant time. This comparison
 method is used so that password hashes cannot be extracted from
 on-line systems using a timing attack and then attacked off-line.
 </summary>
	<param name="a">The first byte array.</param>
	<param name="b">The second byte array.</param>
	<returns>True if both byte arrays are equal. False otherwise.</returns>
</member><member name="M:DAL.Creds.PBKDF2(System.String,System.Byte[],System.Int32,System.Int32)">
	<summary>
 Computes the PBKDF2-SHA1 hash of a password.
 </summary>
	<param name="password">The password to hash.</param>
	<param name="salt">The salt.</param>
	<param name="iterations">The PBKDF2 iteration count.</param>
	<param name="outputBytes">The length of the hash to generate, in bytes.</param>
	<returns>A hash of the password.</returns>
</member><member name="T:DAL.Creds">
	<summary>
 Salted password hashing with PBKDF2-SHA1.
 Author: havoc AT defuse.ca
 www: http://crackstation.net/hashing-security.htm
 Compatibility: .NET 3.0 and later.
 </summary>
</member>
</members>
</doc>